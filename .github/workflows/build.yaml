name: Build All

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  release:
    name: Create Github Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: benjlevesque/short-sha@v1.2
      id: short-sha
      with:
        length: 8
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.short-sha.outputs.sha }}
        release_name: Release ${{ steps.short-sha.outputs.sha }}
        draft: false
        prerelease: false

  build-windows:
    needs: release
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        qt_ver: [5.12.11, 5.15.2, 6.2.0]
        qt_target: [desktop]
        qt_arch: [win64_msvc2019_64, win32_msvc2019, win64_msvc2017_64, win32_msvc2017, win64_mingw81, win32_mingw81, win64_mingw73, win32_mingw73]
        exclude: 
          - qt_ver: 6.2.0
            qt_arch: win32_msvc2019
          - qt_ver: 6.2.0
            qt_arch: win64_msvc2017_64
          - qt_ver: 6.2.0
            qt_arch: win32_msvc2017
          - qt_ver: 6.2.0
            qt_arch: win64_mingw73
          - qt_ver: 6.2.0
            qt_arch: win32_mingw73
          - qt_ver: 5.15.2
            qt_arch: win64_msvc2017_64
          - qt_ver: 5.15.2
            qt_arch: win32_msvc2017
          - qt_ver: 5.15.2
            qt_arch: win64_mingw73
          - qt_ver: 5.15.2
            qt_arch: win32_mingw73
          - qt_ver: 5.12.11
            qt_arch: win64_msvc2019_64
          - qt_ver: 5.12.11
            qt_arch: win32_msvc2019
          - qt_ver: 5.12.11
            qt_arch: win64_mingw81
          - qt_ver: 5.12.11
            qt_arch: win32_mingw81
        include:
          - qt_arch: win64_mingw81
            msvc_arch: mingw
            mingw_arch: x64
          - qt_arch: win32_mingw81
            msvc_arch: mingw
            mingw_arch: x86
          - qt_arch: win64_mingw73
            msvc_arch: mingw
            mingw_arch: x64
          - qt_arch: win32_mingw73
            msvc_arch: mingw
            mingw_arch: x86
          - qt_arch: win64_msvc2019_64
            msvc_arch: x64
            msvc_ver: 14.29
          - qt_arch: win32_msvc2019
            msvc_arch: x86
            msvc_ver: 14.29
          - qt_arch: win64_msvc2017_64
            msvc_arch: x64
            msvc_ver: 14.16
          - qt_arch: win32_msvc2017
            msvc_arch: x86  
            msvc_ver: 14.16
          - qt_ver: 6.2.0
            qt_module: "qtserialport qtserialbus"
          - qt_ver: 5.12.11
            qt_module: ""
          - qt_ver: 5.15.2
            qt_module: ""
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v2
        with:
          path: ${{ runner.workspace }}/Qt
          key: ${{ runner.os }}-${{ matrix.qt_ver }}-${{ matrix.qt_arch }}-QtCache
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_ver }}
          target: ${{ matrix.qt_target }}
          arch: ${{ matrix.qt_arch }}
          aqtversion: ==2.0.0
          modules: ${{ matrix.qt_module }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Build on MSVC
        if: ${{ matrix.msvc_arch == 'x64' || matrix.msvc_arch == 'x86' }}
        shell: cmd
        env:
          vc_arch: ${{ matrix.msvc_arch }}
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" %vc_arch% -vcvars_ver=${{ matrix.msvc_ver }}
          qmake
          nmake
          windeployqt release/rdss.exe
      - name: Prepare for MinGW
        if: ${{ matrix.msvc_arch == 'mingw' }}
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: ${{ matrix.mingw_arch }}
      - name: Build on MinGW
        if: ${{ matrix.msvc_arch == 'mingw' }}
        shell: cmd
        run: |
          qmake
          mingw32-make
          windeployqt release/rdss.exe
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: 'release.zip'
          path: release/
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: release-${{ runner.os }}-${{ matrix.qt_ver }}-${{ matrix.qt_arch }}.zip
          asset_content_type: application/zip
      - name: Upload Release Asset
        id: upload-release-asset-exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: release/rdss.exe
          asset_name: rdss-${{ runner.os }}-${{ matrix.qt_ver }}-${{ matrix.qt_arch }}.exe
          asset_content_type: application/octet-stream
          
  build-linux:
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        qt_ver: [5.12.11, 5.15.2, 6.2.0]
        os: [ubuntu-18.04, ubuntu-20.04]
        exclude: 
          - qt_ver: 6.2.0
            os: ubuntu-18.04
        include:
          - qt_ver: 6.2.0
            qt_module: "qtserialport qtserialbus"
          - qt_ver: 5.12.11
            qt_module: ""
          - qt_ver: 5.15.2
            qt_module: ""
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v2
        with:
          path: ${{ runner.workspace }}/Qt
          key: ${{ runner.os }}-${{ matrix.os }}-${{ matrix.qt_ver }}-QtCache
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_ver }}
          aqtversion: ==2.0.0
          modules: ${{ matrix.qt_module }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Build
        run: |
          qmake
          make
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./rdss
          asset_name: rdss-${{ runner.os }}-${{ matrix.os }}-${{ matrix.qt_ver }}
          asset_content_type: application/x-elf
          
  build-macos:
    needs: release
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        qt_ver: [5.12.11, 5.15.2, 6.2.0]  
        include:
          - qt_ver: 6.2.0
            qt_module: "qtserialport qtserialbus"
          - qt_ver: 5.12.11
            qt_module: ""
          - qt_ver: 5.15.2
            qt_module: ""
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v2
        with:
          path: ${{ runner.workspace }}/Qt
          key: ${{ runner.os }}-${{ matrix.qt_ver }}-QtCache
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_ver }}
          aqtversion: ==2.0.0
          modules: ${{ matrix.qt_module }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Build
        run: |
          qmake
          make
          macdeployqt rdss.app -dmg
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./rdss.dmg
          asset_name: rdss-${{ runner.os }}-${{ matrix.qt_ver }}.dmg
          asset_content_type: application/x-apple-diskimage
      - name: Upload Release Asset
        id: upload-release-asset-exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: rdss.app/Contents/MacOS/rdss
          asset_name: rdss-${{ runner.os }}-${{ matrix.qt_ver }}
          asset_content_type: application/octet-stream
