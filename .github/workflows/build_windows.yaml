# This is a basic workflow to help you get started with Actions

name: Windows

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        # qt_ver: [5.15.2, 6.0.4, 6.1.2]
        qt_ver: [5.15.2]
        qt_target: [desktop]
        qt_arch: [win64_msvc2019_64, win32_msvc2019, win64_msvc2017_64, win32_msvc2017, win64_mingw81, win32_mingw81]
        #exclude: 
          # - qt_ver: 5.9.8
          #   qt_arch: win32_mingw73
          # - qt_ver: 5.12.6
          #   qt_arch: win32_mingw53
        include:
          - qt_arch: win64_mingw81
            msvc_arch: x64
          - qt_arch: win32_mingw81
            msvc_arch: x86
          - qt_arch: win64_msvc2019_64
            msvc_arch: x64
          - qt_arch: win32_msvc2019
            msvc_arch: x86
          - qt_arch: win64_msvc2017_64
            msvc_arch: x64
          - qt_arch: win32_msvc2017
            msvc_arch: x86
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-${{ matrix.qt_ver }}-${{ matrix.qt_arch }}-QtCache
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_ver }}
          target: ${{ matrix.qt_target }}
          arch: ${{ matrix.qt_arch }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Build on MSVC
        shell: cmd
        env:
          vc_arch: ${{ matrix.msvc_arch }}
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" %vc_arch%
          qmake
          lrelease zh_CN.ts
          nmake
          windeployqt release/rdss.exe
      - name: Archive using zip or tar
        uses: NSCoder/archive-action@v1.0.0
        with:
          args: tar zvcpf release.tar.gz release/
      - name: Upload compile output
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }} ${{ matrix.qt_ver }} ${{ matrix.qt_arch }}
          path: release
      - name: Upload compile output
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }} ${{ matrix.qt_ver }} ${{ matrix.qt_arch }} DIDNT_PACK
          path: release/rdss.exe
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 6
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}-${{ steps.short-sha.outputs.sha }}
          release_name: Release ${{ github.ref }} ${{ steps.short-sha.outputs.sha }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./
          asset_name: release.tar.gz
          asset_content_type: application/gzip
      - name: Upload Release Asset
        id: upload-release-asset-exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/
          asset_name: rdss.exe
          asset_content_type: application/octet-stream
